# create linux os user and setup passwordless login within all nodes
# sudoer.yml tasks should be run before this for sudo to function correctly
---
- name: "create {{ ssh_user.name }} (os user) and generate the ssh key"
  user:
    name: "{{ ssh_user.name }}"
    password: $6$X7kK4tBlFPg$BD/3nmnUBmgK.03itZO6aMrFDfgkBauC16/4jy.Xz3L1NNQTJmS0TsPXolSj0xc/nzXyIe.flRqUtYQh6JDAL.
    generate_ssh_key: yes
    ssh_key_comment: "ansible-generated for {{ ssh_user.name }}@{{ ansible_hostname }}"
    ssh_key_file: .ssh/id_rsa
    ssh_key_bits: 2048
    state: present
  become: yes

- name: "generate the ssh key for root"
  shell: ssh-keygen -t rsa -b 2048 -f /root/.ssh/id_rsa
  args:
    creates: /root/.ssh/id_rsa
  when: ssh_user.name == "root"
  become: yes

- name: "add {{ ssh_user.name }} to sudo group"
  user:
    name: "{{ ssh_user.name }}"
    groups: sudo
    append: yes
  when: ssh_user.sudoer
  become: yes

- name: "fetch {{ ssh_user.name }}'s public ssh key from remote hosts"
  fetch:
    dest: "/tmp/ansible/ssh_key_role/{{ ssh_user.name }}/{{ inventory_hostname }}/id_rsa.pub"
    src: "{{ ssh_user.home_dir | default('/home/' + ssh_user.name) }}/.ssh/id_rsa.pub"
    flat: yes
  become: yes
  changed_when: false # as will remove them after below task

- name: "install fetched {{ ssh_user.name }}'s public ssh keys to all hosts"
  authorized_key:
    user: "{{ ssh_user.name }}"
    key: "{{ lookup('file', '/tmp/ansible/ssh_key_role/' + ssh_user.name + '/' + item + '/id_rsa.pub') }}"
    state: present
  become: yes
  with_items: "{{ groups['all'] }}"

- name: remove temp local public ssh key copies
  local_action: file dest="tmp/ansible" state=absent
  changed_when: false

- name: scan host for its ssh public key
  shell: "ssh-keyscan {{ item }},{{ hostvars[item]['ansible_all_ipv4_addresses'][0] }}"
  with_items: "{{ groups['all'] }}"
  register: ssh_known_host_results
  ignore_errors: yes

- name: install the public key in the known_hosts file for {{ ssh_user.name }}
  known_hosts:
    name: "{{ item.item }}"
    key: "{{ item.stdout }}"
    path: "{{ ssh_user.home_dir | default('/home/' + ssh_user.name) }}/.ssh/known_hosts"
  with_items: "{{ ssh_known_host_results.results }}"
  become: yes
